05-06
//Q1：创建一个函数，能接受两个参数：
//1)第一个参数为URL，即可下载的文件；第二个参数为目录，即下载后保存的位置；
//2)如果用户给的目录不存在，则提示用户是否创建；如果创建就继续执行，否则，函数返回一个55的错误值给调用脚本；
//3)如果给的目录存在，则下载文件；下载命令执行结束后测试文件下载成功与否；如果成功，则返回0给调用脚本，否则，返回56给调用脚本；
A：#!/bin/bash
  url=$1
  dir=$2
  download()
  {
          cd $dir &>/dev/null
          if [ $? -ne 0 ]
          then
          read -p "$dir No such file or directory,create now?(y/n)" answer
                  if [ "$answer" ==  "y" ];then
                  mkdir -p $dir
                  cd $dir
                  wget $url &>/dev/null
                          if [ $? -ne 0 ];then
                          return "56"
                          fi
                  else
                  return "55"
                  fi
          else
          wget $url &>/dev/null
                  if [ $? -ne 0 ];then
                  return "56"
                  fi
          fi
  }
  download $url $dir
  //download $1 $2
  echo $?


//-Q2：写一个脚本，实现判断10.8.99.0/24网络里，当前在线的IP有哪些，能ping通则认为在线。
A:
#!/bin/bash

ip_ping(){
for ip in $(seq 1 255)
do
{
ping -c 1 10.19.16.$ip > /dev/null 2>&1
if [ $? -eq 0 ]; then
	echo 10.19.16.$ip UP
else
	echo 10.19.16.$ip DOWN
fi
}
done
}
ip_ping

//-Q3：批量创建5个系统用户test01-test05并设置密码（密码为test后面跟3个随机字符），用户名和密码按行写入userinfo文件。
A:
#!bin/bash

for i in $(seq 1 5)
do
useradd test0$i >/dev/null
pwd=$(cat /dev/urandom | head -1|md5sum |head -c 3)
echo test0$i test$pwd >>userinfo
done

//-Q4：在/home/map目录下通过随机小写5个字母加固定字符串test批量创建10个html文件，名称列如：abcdetest.html （使用for循环）。
A:
#!/bin/bash

dir=/home/map/
[  ! -d  $dir  ] && mkdir -p  $dir
for i in `seq 5`
do
  touch $dir`echo $RANDOM|md5sum|cut -c 1-5`test.html
done

//-Q5：开发shell脚本分别实现以脚本传参以及read读入的方式比较2个整数大小。以屏幕
输出的方式提醒用户比较结果。注意：一共是开发2个脚本。当用脚本传参以及read读入的方式需要对变量是否为数字、并且传参个数做判断。

//比较参数--脚本1
#!/bin/bash
read -p "Pls input two num:" a b
#no1
[ -z "$a" ] || [ -z "$b" ] && {
echo "Pls input two num again."
exit 1
}
#no2
expr $a + 10 &>/dev/null

RETVAL1=$?
expr $b + 10 &>/dev/null
RETVAL2=$?
test $RETVAL1 -eq 0 -a $RETVAL2 -eq 0 ||{
echo "pls input two "num" again."
exit 2
}

#num3
[ $a -lt $b ] &&{
echo "$a < $b"
}
#num4
[ $a -eq $b ] &&{
echo "$a = $b"
}
#num5
[ $a -gt $b ] &&{
echo "$a > $b"
}


// 脚本传参--脚本2

#!/bin/bash
a=$1
b=$2
#no1
[ $# -ne 2 ] &&{
echo "USAGE:$0 NUM1 NUM2"
exit 1
}
#no2
expr $a + 10 &>/dev/null

RETVAL1=$?
expr $b + 10 &>/dev/null
RETVAL2=$?
test $RETVAL1 -eq 0 -a $RETVAL2 -eq 0 ||{
echo "pls input two "num" again."
exit 2
}

#num3
[ $a -lt $b ] &&{
echo "$a < $b"
}
#num4
[ $a -eq $b ] &&{
echo "$a = $b"
}
#num5
[ $a -gt $b ] &&{
echo "$a > $b"
}