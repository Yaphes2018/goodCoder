-Q1：请简述linux系统加载过程。
linux系统加载过程主要包含：BIOS加电自检、系统引导、加载内核、初始化系统
1、BIOS加电自检
开机后，系统会执行BIOS中的上电自检POST(Power-on self test)，主要负责检测系统外围关键设备（如：CPU、内存、显卡、I/O、键盘鼠标等）是否正常。例如，最常见的是内存松动的情况，BIOS自检阶段会报错，系统就无法启动起来
2、系统引导
步骤一：做完自检后，系统会读取MBR，主引导记录，它存放了预启动信息、分区表信息。
系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0×7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader
步骤二：Boot Loader 就是在操作系统内核运行之前运行的一段小程序。通过这段小程序，我们可以初始化硬件设备、建立内存空间的映射图，从而将系统的软硬件环境带到一个合适的状态，以便为最终调用操作系统内核做好一切准备。
Boot Loader有若干种，其中Grub、Lilo和spfdisk是常见的Loader。
3、加载内核
根据grub设定的内核镜像去解析配置文件，将加载内核镜像到内存中，而内核会立即初始化系统中各设备并做相关的配置工作，其中包括CPU、I/O、存储设备等。
4、初始化系统
执行/sbin/init进程，该进程为其他进程的父进程，当它接管了系统的控制权先之后，它首先会去读取/etc/inittab文件来执行相应的脚本进行系统初始化，如设置键盘、字体，装载模块，设置网络等。主要包括以下工作：
(1) 执行系统初始化脚本(/etc/rc.d/rc.sysinit)，对系统进行基本的配置
(2) 执行/etc/rc.d/rc脚本
(3) 执行用户自定义引导程序/etc/rc.d/rc.local
(4) 等待用户登陆

-Q2：什么是swap分区？安装linux操作系统的时候，如何设置swap分区大小。
Swap分区在系统的物理内存不够用的时候，把物理内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到Swap分区中，等到那些程序要运行时，再从Swap分区中恢复保存的数据到内存中。

1、查看当前swap大小
free -m
2、创建2G空间
dd if=/dev/zero of=/swap1 bs=1M count=2048
3、将目的文件设置为swap分区文件
mkswap /swap1
4、激活swap，立即启用交换分区文件
swapon swapfile
5、永久生效
vi /etc/fstab
最后一行添加：/var/swap swap swap defaults 0 0
6、收回 swap 空间
swapoff /var/swap
7、从文件系统中回收
rm /var/swap

-Q3：请问题下面目录主要存放什么数据。 /etc，/etc/initd/，/boot，/usr/bin，/bin，/usr/sbin，/sbin，/dev，/var/ log
/：根目录
/bin：用户二进制文件，在单用户模式下，你需要使用的常见Linux命令都位于此目录下。系统的所有用户使用的命令都设在这里。例如：ps、ls、ping、grep、cp
/sbin：系统二进制文件，在这个目录下的linux命令通常由系统管理员使用，对系统进行维护。例如：iptables、reboot、fdisk、ifconfig、swapon命令
/etc：包含所有程序所需的配置文件，也包含了用于启动/停止单个程序的启动和关闭shell脚本
/etc/init.d/:init.d目录包含许多系统各种服务的启动和停止脚本
/dev：设备文件，包括终端设备、USB或连接到系统的任何设备
/proc：进程信息
/var：变量文件
/var/log: 所有服务的登录的文件或错误信息文件
/tmp：包含系统和用户创建的临时文件
/usr：用户程序
/usr/bin中包含用户程序的二进制文件。如果你在/bin中找不到用户二进制文件，到/usr/bin目录看看。例如：at、awk、cc、less、scp。
/usr/sbin中包含系统管理员的二进制文件。如果你在/sbin中找不到系统二进制文件，到/usr/sbin目录看看。例如：atd、cron、sshd、useradd、userdel。
/usr/lib中包含了/usr/bin和/usr/sbin用到的库。
/usr/local中包含了从源安装的用户程序。例如，当你从源安装Apache，它会在/usr/local/apache2中。
/home：所有用户用home目录在存储文件档案
/boot：引导加载程序相关的文件
/lib：系统库
/opt：可选的附加应用程序

-Q4：在系统中创建2个用户，test01、test02，创建1个用户组group01，且test01、test02对于group01有读写权限，其他之外的任何用户对group01都不可读。请列出实现该需求的相关完整指令。
groupadd group01
useradd -g group01 test01
useradd -g group01 test02
chmod ug+rw,o-r file.txt

-Q5：找出/etc下面，文件容量大于50KB且文件所有者不是root的文件名，且将权限完整的列出。(ls -l)
find /etc -size +50k ! -user root -exec ls -l {} \;
但是用-exec相当于前面匹配了多少个，就需要启动相应的进程数量，会造成不必要的资源占用，因此当匹配文件较多，则可以用管道xargs：
find /etc -size +50k ! -user root | xargs ls -l

