-Q1：创建一个函数，能接受两个参数：
1)第一个参数为URL，即可下载的文件；第二个参数为目录，即下载后保存的位置；
2)如果用户给的目录不存在，则提示用户是否创建；如果创建就继续执行，否则，函数返回一个55的错误值给调用脚本；
3)如果给的目录存在，则下载文件；下载命令执行结束后测试文件下载成功与否；如果成功，则返回0给调用脚本，否则，返回56给调用脚本；

#!/bin/bash

url=$1
dir=$2

down(){
    if [ -z $url ] #判断是否有输入参数
    then
        echo "Please enter url"
    elif [ -z $dir ]
    then
        echo "Please enter the directory you want to save"
    fi
    if [ ! -d $dir ] #判断目录是否存在,若不存在则新增并执行下载任务
    then
        read -p "the directory is not exist,do you want to create,enter y(n)" answer
        if [ $answer == "y" ]
        then
            mkdir -p $dir
            wget $dir $url 1>/dev/null 2>&1
            if [ $? -eq 0 ]
            then return 0  #执行成功，返回0
            else return 56 #执行失败，返回56
            fi
        else return 55 #不同意创建目录，返回55
        fi
    else
            wget $dir $url 1>/dev/null 2>&1
            if [ $? -eq 0 ]
            then return 0  #执行成功，返回0
            else return 56 #执行失败，返回56
            fi
        fi
}

down $url $dir

执行：sh down.sh  "https://kunlun.ele.me/upcui/retail/soataskdownloadfile?id=517574&task_type=export_sku&wid=2185907240" "/home/map/tt/ooooooooooooooo"

-Q2：写一个脚本，实现判断10.8.99.0/24网络里，当前在线的IP有哪些，能ping通则认为在线。

#!/bin/bash

#方法一
for i in $(seq 1 255)
do
    ping -c 1 10.8.99.$i >/dev/null 2>&1
    if [ $? -eq 0 ]
    then
        echo "10.8.99.$i UP"
    else
        echo "10.8.99.$i DOWN"
    fi
done

#方法二
nmap –sp 10.8.99.0/24：通过数据包检测，分析局域网内有几台主机是启动的。

执行：sh ipcheck.sh

-Q3：批量创建5个系统用户test01-test05并设置密码（密码为test后面跟3个随机字符），用户名和密码按行写入userinfo文件。

#!/bin/bash

if [ ! -f "/home/map/tt/userinfo.txt" ]
then
    touch /home/map/tt/userinfo.txt
fi
for i in $(seq 1 5)
do
    useradd test0$i
    password=$(head /dev/urandom | tr -dc A-Za-z | head -c 3)
    echo test$password | passwd --stdin test0$i
    echo test0$i test$password >> /home/map/tt/userinfo.txt
done

执行：sh useradd.sh

-Q4：在/home/map目录下通过随机小写5个字母加固定字符串test批量创建10个html文件，名称列如：abcdetest.html （使用for循环）。

#!/bin/bash

if [ ! -d "/home/map/tt/" ]
then
    mkdir -p /home/map/tt
fi
cd /home/map/tt
for i in $(seq 1 10)
do
    rand=$(cat /dev/urandom | tr -dc a-z | head -c 5)
    touch $rand"test.html"
done

执行：sh addfile.sh

-Q5：开发shell脚本分别实现以脚本传参以及read读入的方式比较2个整数大小。以屏幕输出的方式提醒用户比较结果。注意：一共是开发2个脚本。当用脚本传参以及read读入的方式需要对变量是否为数字、并且传参个数做判断。

脚本传参：sh compareParam.sh 3 5

#!/bin/bash

#脚本传参
a=$1
b=$2
if [ $# -ne 2 ]
then echo "The number of parameters is incorrect, please input 2 Parameters"
exit 1
else
    expr $a + 10 &>/dev/null
    num1=$?
    expr $b + 10 &>/dev/null
    num2=$?
    if [ $num1 -ne 0 ]||[ $num2 -ne 0 ]
    then echo "The two numbers involved in the comparison must be an integer. Please re-enter"
    exit 2
    else
        if [ $a -gt $b ]
        then echo "$a is larger than $b"
        elif [ $a -lt $b ]
        then echo "$a is smaller than $b"
        else
        echo "$a is equal with $b"
        fi
    fi
fi

read读入：sh compareRead.sh

#!/bin/bash

#read读入方式
read -t 30 -p "Pls input two num:" a b
if [ ${#a} -eq 0 ]||[ ${#b} -eq 0 ]
then echo "The number of parameters is incorrect, please input 2 Parameters"
exit 1
else
    expr $a + 10 &>/dev/null
    num1=$?
    expr $b + 10 &>/dev/null
    num2=$?
    if [ $num1 -ne 0 ]||[ $num2 -ne 0 ]
    then echo "The two numbers involved in the comparison must be an integer. Please re-enter"
    exit 2
    else
        if [ $a -gt $b ]
        then echo "$a is larger than $b"
        elif [ $a -lt $b ]
        then echo "$a is smaller than $b"
        else
        echo "$a is equal with $b"
        fi
    fi
fi
